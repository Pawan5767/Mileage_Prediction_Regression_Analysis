{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Import** **Library**"],"metadata":{"id":"he-wP-xsTcJQ"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"5LdPEIKXTwkT","executionInfo":{"status":"ok","timestamp":1730917257761,"user_tz":-330,"elapsed":1747,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt"],"metadata":{"id":"LJhAeTUUT9a8","executionInfo":{"status":"ok","timestamp":1730917263274,"user_tz":-330,"elapsed":1289,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns"],"metadata":{"id":"-Ogim_AVUDnF","executionInfo":{"status":"ok","timestamp":1730917266088,"user_tz":-330,"elapsed":2311,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"wrUKRrPXT2TB","executionInfo":{"status":"ok","timestamp":1730917270927,"user_tz":-330,"elapsed":981,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["# **Import** **Data**"],"metadata":{"id":"xhmsgJW2Ufaa"}},{"cell_type":"code","source":["df = pd.read_csv('https://github.com/YBIFoundation/Dataset/raw/main/MPG.csv')"],"metadata":{"id":"zP_Yxy6dUk4p","executionInfo":{"status":"ok","timestamp":1730917283500,"user_tz":-330,"elapsed":457,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"nmheSOrYVZCJ","executionInfo":{"status":"ok","timestamp":1730917287873,"user_tz":-330,"elapsed":451,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"241fd54e-e5b8-4bba-b512-a4cda2f9dff1"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    mpg  cylinders  displacement  horsepower  weight  acceleration  \\\n","0  18.0          8         307.0       130.0    3504          12.0   \n","1  15.0          8         350.0       165.0    3693          11.5   \n","2  18.0          8         318.0       150.0    3436          11.0   \n","3  16.0          8         304.0       150.0    3433          12.0   \n","4  17.0          8         302.0       140.0    3449          10.5   \n","\n","   model_year origin                       name  \n","0          70    usa  chevrolet chevelle malibu  \n","1          70    usa          buick skylark 320  \n","2          70    usa         plymouth satellite  \n","3          70    usa              amc rebel sst  \n","4          70    usa                ford torino  "],"text/html":["\n","  <div id=\"df-7752ab25-fe0c-4ea0-bbb1-4532e7969b2e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>model_year</th>\n","      <th>origin</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>307.0</td>\n","      <td>130.0</td>\n","      <td>3504</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>usa</td>\n","      <td>chevrolet chevelle malibu</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15.0</td>\n","      <td>8</td>\n","      <td>350.0</td>\n","      <td>165.0</td>\n","      <td>3693</td>\n","      <td>11.5</td>\n","      <td>70</td>\n","      <td>usa</td>\n","      <td>buick skylark 320</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>18.0</td>\n","      <td>8</td>\n","      <td>318.0</td>\n","      <td>150.0</td>\n","      <td>3436</td>\n","      <td>11.0</td>\n","      <td>70</td>\n","      <td>usa</td>\n","      <td>plymouth satellite</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>16.0</td>\n","      <td>8</td>\n","      <td>304.0</td>\n","      <td>150.0</td>\n","      <td>3433</td>\n","      <td>12.0</td>\n","      <td>70</td>\n","      <td>usa</td>\n","      <td>amc rebel sst</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>17.0</td>\n","      <td>8</td>\n","      <td>302.0</td>\n","      <td>140.0</td>\n","      <td>3449</td>\n","      <td>10.5</td>\n","      <td>70</td>\n","      <td>usa</td>\n","      <td>ford torino</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7752ab25-fe0c-4ea0-bbb1-4532e7969b2e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7752ab25-fe0c-4ea0-bbb1-4532e7969b2e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7752ab25-fe0c-4ea0-bbb1-4532e7969b2e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-62bda5af-caab-49f0-ac29-dc8f0ce39e12\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-62bda5af-caab-49f0-ac29-dc8f0ce39e12')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-62bda5af-caab-49f0-ac29-dc8f0ce39e12 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 398,\n  \"fields\": [\n    {\n      \"column\": \"mpg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.815984312565782,\n        \"min\": 9.0,\n        \"max\": 46.6,\n        \"num_unique_values\": 129,\n        \"samples\": [\n          17.7,\n          30.5,\n          30.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cylinders\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 3,\n        \"max\": 8,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4,\n          5,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"displacement\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 104.26983817119581,\n        \"min\": 68.0,\n        \"max\": 455.0,\n        \"num_unique_values\": 82,\n        \"samples\": [\n          122.0,\n          307.0,\n          360.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"horsepower\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38.49115993282855,\n        \"min\": 46.0,\n        \"max\": 230.0,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          92.0,\n          100.0,\n          52.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 846,\n        \"min\": 1613,\n        \"max\": 5140,\n        \"num_unique_values\": 351,\n        \"samples\": [\n          3730,\n          1995,\n          2215\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"acceleration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7576889298126757,\n        \"min\": 8.0,\n        \"max\": 24.8,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          14.7,\n          18.0,\n          14.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"model_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 70,\n        \"max\": 82,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          81,\n          79,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"origin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"usa\",\n          \"japan\",\n          \"europe\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 305,\n        \"samples\": [\n          \"mazda rx-4\",\n          \"ford f108\",\n          \"buick century luxus (sw)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":366},"id":"PFo8-BjhVfXk","executionInfo":{"status":"ok","timestamp":1730917292974,"user_tz":-330,"elapsed":432,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"54b321b9-bb7e-4d90-c1e0-b0a498d3f714"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mpg             129\n","cylinders         5\n","displacement     82\n","horsepower       93\n","weight          351\n","acceleration     95\n","model_year       13\n","origin            3\n","name            305\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>mpg</th>\n","      <td>129</td>\n","    </tr>\n","    <tr>\n","      <th>cylinders</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>displacement</th>\n","      <td>82</td>\n","    </tr>\n","    <tr>\n","      <th>horsepower</th>\n","      <td>93</td>\n","    </tr>\n","    <tr>\n","      <th>weight</th>\n","      <td>351</td>\n","    </tr>\n","    <tr>\n","      <th>acceleration</th>\n","      <td>95</td>\n","    </tr>\n","    <tr>\n","      <th>model_year</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>origin</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>name</th>\n","      <td>305</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["# **Data** **Preprocessing**"],"metadata":{"id":"VJhOx8ocVsJb"}},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kmOwXoDkVlo4","executionInfo":{"status":"ok","timestamp":1730917295070,"user_tz":-330,"elapsed":7,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"6588c06f-0b47-4216-defb-9300d7d7068f"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 398 entries, 0 to 397\n","Data columns (total 9 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   mpg           398 non-null    float64\n"," 1   cylinders     398 non-null    int64  \n"," 2   displacement  398 non-null    float64\n"," 3   horsepower    392 non-null    float64\n"," 4   weight        398 non-null    int64  \n"," 5   acceleration  398 non-null    float64\n"," 6   model_year    398 non-null    int64  \n"," 7   origin        398 non-null    object \n"," 8   name          398 non-null    object \n","dtypes: float64(4), int64(3), object(2)\n","memory usage: 28.1+ KB\n"]}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"JOxbDFBqV8Iq","executionInfo":{"status":"ok","timestamp":1730917297498,"user_tz":-330,"elapsed":478,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"a959dbe8-a5fd-4d48-de27-270b210c342f"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              mpg   cylinders  displacement  horsepower       weight  \\\n","count  398.000000  398.000000    398.000000  392.000000   398.000000   \n","mean    23.514573    5.454774    193.425879  104.469388  2970.424623   \n","std      7.815984    1.701004    104.269838   38.491160   846.841774   \n","min      9.000000    3.000000     68.000000   46.000000  1613.000000   \n","25%     17.500000    4.000000    104.250000   75.000000  2223.750000   \n","50%     23.000000    4.000000    148.500000   93.500000  2803.500000   \n","75%     29.000000    8.000000    262.000000  126.000000  3608.000000   \n","max     46.600000    8.000000    455.000000  230.000000  5140.000000   \n","\n","       acceleration  model_year  \n","count    398.000000  398.000000  \n","mean      15.568090   76.010050  \n","std        2.757689    3.697627  \n","min        8.000000   70.000000  \n","25%       13.825000   73.000000  \n","50%       15.500000   76.000000  \n","75%       17.175000   79.000000  \n","max       24.800000   82.000000  "],"text/html":["\n","  <div id=\"df-635380d7-4f99-4acb-b246-2131df95f2a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>model_year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","      <td>392.000000</td>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","      <td>398.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>23.514573</td>\n","      <td>5.454774</td>\n","      <td>193.425879</td>\n","      <td>104.469388</td>\n","      <td>2970.424623</td>\n","      <td>15.568090</td>\n","      <td>76.010050</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>7.815984</td>\n","      <td>1.701004</td>\n","      <td>104.269838</td>\n","      <td>38.491160</td>\n","      <td>846.841774</td>\n","      <td>2.757689</td>\n","      <td>3.697627</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>9.000000</td>\n","      <td>3.000000</td>\n","      <td>68.000000</td>\n","      <td>46.000000</td>\n","      <td>1613.000000</td>\n","      <td>8.000000</td>\n","      <td>70.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>17.500000</td>\n","      <td>4.000000</td>\n","      <td>104.250000</td>\n","      <td>75.000000</td>\n","      <td>2223.750000</td>\n","      <td>13.825000</td>\n","      <td>73.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>23.000000</td>\n","      <td>4.000000</td>\n","      <td>148.500000</td>\n","      <td>93.500000</td>\n","      <td>2803.500000</td>\n","      <td>15.500000</td>\n","      <td>76.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>29.000000</td>\n","      <td>8.000000</td>\n","      <td>262.000000</td>\n","      <td>126.000000</td>\n","      <td>3608.000000</td>\n","      <td>17.175000</td>\n","      <td>79.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>46.600000</td>\n","      <td>8.000000</td>\n","      <td>455.000000</td>\n","      <td>230.000000</td>\n","      <td>5140.000000</td>\n","      <td>24.800000</td>\n","      <td>82.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-635380d7-4f99-4acb-b246-2131df95f2a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-635380d7-4f99-4acb-b246-2131df95f2a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-635380d7-4f99-4acb-b246-2131df95f2a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d93e6fdf-607d-4fd6-a0d8-041ca6d2da22\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d93e6fdf-607d-4fd6-a0d8-041ca6d2da22')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d93e6fdf-607d-4fd6-a0d8-041ca6d2da22 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"mpg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 133.37523833494922,\n        \"min\": 7.815984312565782,\n        \"max\": 398.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          23.514572864321607,\n          23.0,\n          398.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cylinders\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 139.0071020301553,\n        \"min\": 1.7010042445332094,\n        \"max\": 398.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          398.0,\n          5.454773869346734,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"displacement\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 143.57617465667641,\n        \"min\": 68.0,\n        \"max\": 455.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          193.42587939698493,\n          148.5,\n          398.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"horsepower\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 118.66115898346133,\n        \"min\": 38.49115993282855,\n        \"max\": 392.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          104.46938775510205,\n          93.5,\n          392.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1535.5522437115258,\n        \"min\": 398.0,\n        \"max\": 5140.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2970.424623115578,\n          2803.5,\n          398.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"acceleration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 135.93788360342714,\n        \"min\": 2.7576889298126757,\n        \"max\": 398.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15.568090452261307,\n          15.5,\n          398.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"model_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 120.24225119423292,\n        \"min\": 3.697626646732623,\n        \"max\": 398.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          76.01005025125629,\n          76.0,\n          398.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.select_dtypes(include=['number']).corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"w5kE_ay5W-6m","executionInfo":{"status":"ok","timestamp":1730917300412,"user_tz":-330,"elapsed":509,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"717b07a5-09e9-451d-b9b6-0fd5059650f3"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   mpg  cylinders  displacement  horsepower    weight  \\\n","mpg           1.000000  -0.775396     -0.804203   -0.778427 -0.831741   \n","cylinders    -0.775396   1.000000      0.950721    0.842983  0.896017   \n","displacement -0.804203   0.950721      1.000000    0.897257  0.932824   \n","horsepower   -0.778427   0.842983      0.897257    1.000000  0.864538   \n","weight       -0.831741   0.896017      0.932824    0.864538  1.000000   \n","acceleration  0.420289  -0.505419     -0.543684   -0.689196 -0.417457   \n","model_year    0.579267  -0.348746     -0.370164   -0.416361 -0.306564   \n","\n","              acceleration  model_year  \n","mpg               0.420289    0.579267  \n","cylinders        -0.505419   -0.348746  \n","displacement     -0.543684   -0.370164  \n","horsepower       -0.689196   -0.416361  \n","weight           -0.417457   -0.306564  \n","acceleration      1.000000    0.288137  \n","model_year        0.288137    1.000000  "],"text/html":["\n","  <div id=\"df-c4607309-90b4-4f65-97ba-c80e230b1664\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mpg</th>\n","      <th>cylinders</th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","      <th>model_year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>mpg</th>\n","      <td>1.000000</td>\n","      <td>-0.775396</td>\n","      <td>-0.804203</td>\n","      <td>-0.778427</td>\n","      <td>-0.831741</td>\n","      <td>0.420289</td>\n","      <td>0.579267</td>\n","    </tr>\n","    <tr>\n","      <th>cylinders</th>\n","      <td>-0.775396</td>\n","      <td>1.000000</td>\n","      <td>0.950721</td>\n","      <td>0.842983</td>\n","      <td>0.896017</td>\n","      <td>-0.505419</td>\n","      <td>-0.348746</td>\n","    </tr>\n","    <tr>\n","      <th>displacement</th>\n","      <td>-0.804203</td>\n","      <td>0.950721</td>\n","      <td>1.000000</td>\n","      <td>0.897257</td>\n","      <td>0.932824</td>\n","      <td>-0.543684</td>\n","      <td>-0.370164</td>\n","    </tr>\n","    <tr>\n","      <th>horsepower</th>\n","      <td>-0.778427</td>\n","      <td>0.842983</td>\n","      <td>0.897257</td>\n","      <td>1.000000</td>\n","      <td>0.864538</td>\n","      <td>-0.689196</td>\n","      <td>-0.416361</td>\n","    </tr>\n","    <tr>\n","      <th>weight</th>\n","      <td>-0.831741</td>\n","      <td>0.896017</td>\n","      <td>0.932824</td>\n","      <td>0.864538</td>\n","      <td>1.000000</td>\n","      <td>-0.417457</td>\n","      <td>-0.306564</td>\n","    </tr>\n","    <tr>\n","      <th>acceleration</th>\n","      <td>0.420289</td>\n","      <td>-0.505419</td>\n","      <td>-0.543684</td>\n","      <td>-0.689196</td>\n","      <td>-0.417457</td>\n","      <td>1.000000</td>\n","      <td>0.288137</td>\n","    </tr>\n","    <tr>\n","      <th>model_year</th>\n","      <td>0.579267</td>\n","      <td>-0.348746</td>\n","      <td>-0.370164</td>\n","      <td>-0.416361</td>\n","      <td>-0.306564</td>\n","      <td>0.288137</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4607309-90b4-4f65-97ba-c80e230b1664')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c4607309-90b4-4f65-97ba-c80e230b1664 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c4607309-90b4-4f65-97ba-c80e230b1664');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4604a653-330f-4af0-a8a3-2a2035be7e91\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4604a653-330f-4af0-a8a3-2a2035be7e91')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4604a653-330f-4af0-a8a3-2a2035be7e91 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"mpg\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8016175656768498,\n        \"min\": -0.8317409332443344,\n        \"max\": 1.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1.0,\n          -0.7753962854205539,\n          0.42028891210165054\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cylinders\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7947040706832936,\n        \"min\": -0.7753962854205539,\n        \"max\": 1.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          -0.7753962854205539,\n          1.0,\n          -0.5054194890521758\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"displacement\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8216456211919416,\n        \"min\": -0.8042028248058979,\n        \"max\": 1.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          -0.8042028248058979,\n          0.9507213901392415,\n          -0.5436840835009299\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"horsepower\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8260743651440925,\n        \"min\": -0.7784267838977761,\n        \"max\": 1.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          -0.7784267838977761,\n          0.8429833569186568,\n          -0.6891955103342376\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7882159155698183,\n        \"min\": -0.8317409332443344,\n        \"max\": 1.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          -0.8317409332443344,\n          0.8960167954533944,\n          -0.4174573199403932\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"acceleration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6365769931677212,\n        \"min\": -0.6891955103342376,\n        \"max\": 1.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.42028891210165054,\n          -0.5054194890521758,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"model_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5654915849248219,\n        \"min\": -0.41636147709998894,\n        \"max\": 1.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.5792671330833092,\n          -0.34874579661359445,\n          0.28813695429949115\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["# **Remove** **Missing** **Values**"],"metadata":{"id":"hxRj0zC3Y2QJ"}},{"cell_type":"code","source":["df = df.dropna()"],"metadata":{"id":"ev5YUfmmZCJz","executionInfo":{"status":"ok","timestamp":1730917303468,"user_tz":-330,"elapsed":440,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dr6gCGb_ZRtl","executionInfo":{"status":"ok","timestamp":1730917306142,"user_tz":-330,"elapsed":478,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"55b33138-2296-4a4d-e00a-f4696431f191"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 392 entries, 0 to 397\n","Data columns (total 9 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   mpg           392 non-null    float64\n"," 1   cylinders     392 non-null    int64  \n"," 2   displacement  392 non-null    float64\n"," 3   horsepower    392 non-null    float64\n"," 4   weight        392 non-null    int64  \n"," 5   acceleration  392 non-null    float64\n"," 6   model_year    392 non-null    int64  \n"," 7   origin        392 non-null    object \n"," 8   name          392 non-null    object \n","dtypes: float64(4), int64(3), object(2)\n","memory usage: 30.6+ KB\n"]}]},{"cell_type":"markdown","source":["# **Data** **Visualization**"],"metadata":{"id":"1NriDzyMZfT6"}},{"cell_type":"code","source":["sns.pairplot(df,x_vars=['displacement','horsepower','weight','acceleration','mpg'],y_vars=['mpg']);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":268},"id":"GVDRznWxZs9j","executionInfo":{"status":"ok","timestamp":1730917310661,"user_tz":-330,"elapsed":2394,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"4af19596-18ff-4e90-aa60-de044cf95a72"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1250x250 with 6 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.regplot(x='displacement',y='mpg',data=df);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"rJu9sgPva48F","executionInfo":{"status":"ok","timestamp":1730917316212,"user_tz":-330,"elapsed":877,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"972b4de0-46dd-447b-e9af-af3c7dce806c"},"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# **Define Target Variable y and Feature X**"],"metadata":{"id":"-ardL-KlbV61"}},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VBBsl9aUbqZg","executionInfo":{"status":"ok","timestamp":1730917319712,"user_tz":-330,"elapsed":633,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"054803e4-4d92-4413-bbe0-b2eebb9928b1"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['mpg', 'cylinders', 'displacement', 'horsepower', 'weight',\n","       'acceleration', 'model_year', 'origin', 'name'],\n","      dtype='object')"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["y = df['mpg']"],"metadata":{"id":"JkEwLk6abvxZ","executionInfo":{"status":"ok","timestamp":1730917322888,"user_tz":-330,"elapsed":3,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4NSl1EKBb48R","executionInfo":{"status":"ok","timestamp":1730917324154,"user_tz":-330,"elapsed":10,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"85d412f2-52c2-4cb7-c701-aaed0689de1d"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(392,)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["x = df[['displacement','horsepower','weight','acceleration']]"],"metadata":{"id":"5u6XRvvxb9tP","executionInfo":{"status":"ok","timestamp":1730917329741,"user_tz":-330,"elapsed":486,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["x.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"727FE-mRcS_H","executionInfo":{"status":"ok","timestamp":1730917376072,"user_tz":-330,"elapsed":446,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"567449a7-fa7f-44ab-e42a-14be2c729317"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(392, 4)"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Mvlxv7nAcavo","executionInfo":{"status":"ok","timestamp":1730917332457,"user_tz":-330,"elapsed":467,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"d7ddfa89-f639-4bea-82e5-39c763f390bb"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     displacement  horsepower  weight  acceleration\n","0           307.0       130.0    3504          12.0\n","1           350.0       165.0    3693          11.5\n","2           318.0       150.0    3436          11.0\n","3           304.0       150.0    3433          12.0\n","4           302.0       140.0    3449          10.5\n","..            ...         ...     ...           ...\n","393         140.0        86.0    2790          15.6\n","394          97.0        52.0    2130          24.6\n","395         135.0        84.0    2295          11.6\n","396         120.0        79.0    2625          18.6\n","397         119.0        82.0    2720          19.4\n","\n","[392 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-a9db355a-69aa-40d6-b00e-729eee026eed\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>displacement</th>\n","      <th>horsepower</th>\n","      <th>weight</th>\n","      <th>acceleration</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>307.0</td>\n","      <td>130.0</td>\n","      <td>3504</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>350.0</td>\n","      <td>165.0</td>\n","      <td>3693</td>\n","      <td>11.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>318.0</td>\n","      <td>150.0</td>\n","      <td>3436</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>304.0</td>\n","      <td>150.0</td>\n","      <td>3433</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>302.0</td>\n","      <td>140.0</td>\n","      <td>3449</td>\n","      <td>10.5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>393</th>\n","      <td>140.0</td>\n","      <td>86.0</td>\n","      <td>2790</td>\n","      <td>15.6</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>97.0</td>\n","      <td>52.0</td>\n","      <td>2130</td>\n","      <td>24.6</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>135.0</td>\n","      <td>84.0</td>\n","      <td>2295</td>\n","      <td>11.6</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>120.0</td>\n","      <td>79.0</td>\n","      <td>2625</td>\n","      <td>18.6</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>119.0</td>\n","      <td>82.0</td>\n","      <td>2720</td>\n","      <td>19.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>392 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9db355a-69aa-40d6-b00e-729eee026eed')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a9db355a-69aa-40d6-b00e-729eee026eed button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a9db355a-69aa-40d6-b00e-729eee026eed');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-63698b6a-a8fd-4eb2-ac15-64b227783165\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-63698b6a-a8fd-4eb2-ac15-64b227783165')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-63698b6a-a8fd-4eb2-ac15-64b227783165 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4d9b1ed7-aa0c-4f68-8737-09bcc4c53050\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4d9b1ed7-aa0c-4f68-8737-09bcc4c53050 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x","summary":"{\n  \"name\": \"x\",\n  \"rows\": 392,\n  \"fields\": [\n    {\n      \"column\": \"displacement\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 104.64400390890465,\n        \"min\": 68.0,\n        \"max\": 455.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          116.0,\n          307.0,\n          360.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"horsepower\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38.49115993282855,\n        \"min\": 46.0,\n        \"max\": 230.0,\n        \"num_unique_values\": 93,\n        \"samples\": [\n          92.0,\n          100.0,\n          52.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"weight\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 849,\n        \"min\": 1613,\n        \"max\": 5140,\n        \"num_unique_values\": 346,\n        \"samples\": [\n          2472,\n          3221,\n          2700\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"acceleration\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7588641191880816,\n        \"min\": 8.0,\n        \"max\": 24.8,\n        \"num_unique_values\": 95,\n        \"samples\": [\n          14.7,\n          18.0,\n          14.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["# **Scaling** **Data**"],"metadata":{"id":"GPg4GCvec6jd"}},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler"],"metadata":{"id":"ejIQicm4ckHJ","executionInfo":{"status":"ok","timestamp":1730917337826,"user_tz":-330,"elapsed":504,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["ss = StandardScaler()"],"metadata":{"id":"rFoTWVrUdPM4","executionInfo":{"status":"ok","timestamp":1730917339603,"user_tz":-330,"elapsed":422,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["x = ss.fit_transform(x)"],"metadata":{"id":"vPUOtNhXdcHF","executionInfo":{"status":"ok","timestamp":1730917341049,"user_tz":-330,"elapsed":756,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i-GQ1aAodvV-","executionInfo":{"status":"ok","timestamp":1730917341522,"user_tz":-330,"elapsed":8,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"b730ce04-dbd3-4a34-a040-d7995f64e4f9"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.07728956,  0.66413273,  0.62054034, -1.285258  ],\n","       [ 1.48873169,  1.57459447,  0.84333403, -1.46672362],\n","       [ 1.1825422 ,  1.18439658,  0.54038176, -1.64818924],\n","       ...,\n","       [-0.56847897, -0.53247413, -0.80463202, -1.4304305 ],\n","       [-0.7120053 , -0.66254009, -0.41562716,  1.11008813],\n","       [-0.72157372, -0.58450051, -0.30364091,  1.40043312]])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["pd.DataFrame(x). describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"6Y4aksjyd5Fd","executionInfo":{"status":"ok","timestamp":1730917346264,"user_tz":-330,"elapsed":443,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"9dc91e7b-5ee9-42f3-b821-d33699c93bee"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  0             1             2             3\n","count  3.920000e+02  3.920000e+02  3.920000e+02  3.920000e+02\n","mean  -7.250436e-17 -1.812609e-16 -1.812609e-17  4.350262e-16\n","std    1.001278e+00  1.001278e+00  1.001278e+00  1.001278e+00\n","min   -1.209563e+00 -1.520975e+00 -1.608575e+00 -2.736983e+00\n","25%   -8.555316e-01 -7.665929e-01 -8.868535e-01 -6.410551e-01\n","50%   -4.153842e-01 -2.853488e-01 -2.052109e-01 -1.499869e-02\n","75%    7.782764e-01  5.600800e-01  7.510927e-01  5.384714e-01\n","max    2.493416e+00  3.265452e+00  2.549061e+00  3.360262e+00"],"text/html":["\n","  <div id=\"df-efccc904-c285-4a10-b7a8-e1780a2a5e7d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3.920000e+02</td>\n","      <td>3.920000e+02</td>\n","      <td>3.920000e+02</td>\n","      <td>3.920000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>-7.250436e-17</td>\n","      <td>-1.812609e-16</td>\n","      <td>-1.812609e-17</td>\n","      <td>4.350262e-16</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.001278e+00</td>\n","      <td>1.001278e+00</td>\n","      <td>1.001278e+00</td>\n","      <td>1.001278e+00</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-1.209563e+00</td>\n","      <td>-1.520975e+00</td>\n","      <td>-1.608575e+00</td>\n","      <td>-2.736983e+00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>-8.555316e-01</td>\n","      <td>-7.665929e-01</td>\n","      <td>-8.868535e-01</td>\n","      <td>-6.410551e-01</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>-4.153842e-01</td>\n","      <td>-2.853488e-01</td>\n","      <td>-2.052109e-01</td>\n","      <td>-1.499869e-02</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7.782764e-01</td>\n","      <td>5.600800e-01</td>\n","      <td>7.510927e-01</td>\n","      <td>5.384714e-01</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2.493416e+00</td>\n","      <td>3.265452e+00</td>\n","      <td>2.549061e+00</td>\n","      <td>3.360262e+00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efccc904-c285-4a10-b7a8-e1780a2a5e7d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-efccc904-c285-4a10-b7a8-e1780a2a5e7d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-efccc904-c285-4a10-b7a8-e1780a2a5e7d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6ac94df2-c4bd-480b-a376-871980d63c4d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6ac94df2-c4bd-480b-a376-871980d63c4d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6ac94df2-c4bd-480b-a376-871980d63c4d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 138.50741452434895,\n        \"min\": -1.2095632239069316,\n        \"max\": 392.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -7.250436079184695e-17,\n          -0.41538422438044154,\n          392.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 138.48643325978853,\n        \"min\": -1.5209754434541274,\n        \"max\": 392.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -1.812609019796174e-16,\n          -0.285348796110504,\n          392.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 138.51780833650787,\n        \"min\": -1.6085753990039313,\n        \"max\": 392.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -1.8126090197961738e-17,\n          -0.20521089029405923,\n          392.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 138.52721174111198,\n        \"min\": -2.736982934397379,\n        \"max\": 392.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          4.3502616475108174e-16,\n          -0.01499868870077675,\n          392.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["**After Standardization Mean is Zero and Standard Derivation is One bold text**"],"metadata":{"id":"wVlErStbeMcE"}},{"cell_type":"markdown","source":["# **Train Test Split Data**"],"metadata":{"id":"wvaYQwifeyPv"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split"],"metadata":{"id":"RkvPG7R3e_im","executionInfo":{"status":"ok","timestamp":1730917348880,"user_tz":-330,"elapsed":461,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.7, random_state = 2529)"],"metadata":{"id":"mlZsif9VfVco","executionInfo":{"status":"ok","timestamp":1730917350193,"user_tz":-330,"elapsed":710,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["x_train.shape,x_test.shape,y_train.shape,y_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MhP5r0UKhndw","executionInfo":{"status":"ok","timestamp":1730917351529,"user_tz":-330,"elapsed":716,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"33727deb-efd2-4927-e469-fc2027f2d16e"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((274, 4), (118, 4), (274,), (118,))"]},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["# **Linear Regression Model**"],"metadata":{"id":"a-Q1OWyKh_pK"}},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression"],"metadata":{"id":"l8rPTNoJiXox","executionInfo":{"status":"ok","timestamp":1730917355152,"user_tz":-330,"elapsed":427,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["lr = LinearRegression()"],"metadata":{"id":"GvIdxOpSi1F_","executionInfo":{"status":"ok","timestamp":1730917357511,"user_tz":-330,"elapsed":3,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["lr.fit(x_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"FEVRjWKZi7nu","executionInfo":{"status":"ok","timestamp":1730917359817,"user_tz":-330,"elapsed":470,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"21291136-872e-455f-f871-4fbf2f802aa4"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["lr.intercept_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JoH9CUm-jI8u","executionInfo":{"status":"ok","timestamp":1730917361988,"user_tz":-330,"elapsed":444,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"42c813af-47dd-4891-a2f5-b439c71eef24"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["23.485738559737584"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["lr.coef_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t9hZHKsdjUCQ","executionInfo":{"status":"ok","timestamp":1730917364656,"user_tz":-330,"elapsed":470,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"ab323ffb-0800-4f6a-fd06-e79436e2543c"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-1.05767743, -1.68734727, -4.10787617, -0.11495177])"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["**Mileage=23.4-1.05Displacement-1.68Horsepower-4.10weight-0.11Acceleration+error**"],"metadata":{"id":"t8m7izx-jdaZ"}},{"cell_type":"markdown","source":["# **Predit Test Data**"],"metadata":{"id":"RMY8Bbimt1-v"}},{"cell_type":"code","source":["y_pred = lr.predict(x_test)"],"metadata":{"id":"aEw0Lw20jbBG","executionInfo":{"status":"ok","timestamp":1730917479803,"user_tz":-330,"elapsed":439,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NqYNDnmquLjg","executionInfo":{"status":"ok","timestamp":1730917495829,"user_tz":-330,"elapsed":446,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"8e0bef7c-5adf-40de-d4d6-4de1f78c9579"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([18.51865637, 15.09305675, 14.30128789, 23.6753321 , 29.7546115 ,\n","       23.68796629, 26.61066644, 24.56692437, 15.06260986, 11.94312046,\n","       24.08050053, 27.96518468, 31.66130278, 31.01309132, 18.32428976,\n","       19.32795009, 28.08847536, 32.1506879 , 31.15859692, 27.15792144,\n","       18.82433097, 22.54580176, 26.15598115, 32.36393869, 20.74377679,\n","        8.78027518, 22.19699435, 18.20614294, 25.00052718, 15.26421552,\n","       23.13441082, 17.10542257,  9.87180062, 30.00790415, 20.41204655,\n","       29.11860245, 24.4305187 , 21.72601835, 10.51174626, 13.12426391,\n","       21.41938406, 19.96113872,  6.19146626, 17.79025345, 22.5493033 ,\n","       29.34765021, 13.4861847 , 25.88852083, 29.40406946, 22.41841964,\n","       22.07684766, 16.46575802, 24.06290693, 30.12890046, 10.11318121,\n","        9.85011438, 28.07543852, 23.41426617, 20.08501128, 30.68234133,\n","       20.92026393, 26.78370281, 22.9078744 , 14.15936872, 24.6439883 ,\n","       26.95515832, 15.25709393, 24.11272087, 30.80980589, 14.9770217 ,\n","       27.67836372, 24.2372919 , 10.92177228, 30.22858779, 30.88687365,\n","       27.33992044, 31.18447082, 10.8873597 , 27.63510608, 16.49231363,\n","       25.63229888, 29.49776285, 14.90393439, 32.78670687, 30.37325244,\n","       30.9262743 , 14.71702373, 27.09633246, 26.69933806, 29.06424799,\n","       32.45810182, 29.44846898, 31.61239999, 31.57891837, 21.46542321,\n","       31.76739191, 26.28605476, 28.96419915, 31.09628395, 24.80549594,\n","       18.76490961, 23.28043777, 23.04466919, 22.14143162, 15.95854367,\n","       28.62870918, 25.58809869, 11.4040908 , 25.73334842, 30.83500051,\n","       21.94176255, 15.34532941, 30.37399213, 28.7620624 , 29.3639931 ,\n","       29.10476703, 20.44662365, 28.11466839])"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["# **Model Accuracy**"],"metadata":{"id":"TrXbLi2vuTwv"}},{"cell_type":"code","source":["from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, r2_score"],"metadata":{"id":"ziNSMlmdudsY","executionInfo":{"status":"ok","timestamp":1730917692384,"user_tz":-330,"elapsed":448,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["mean_absolute_error(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rvB6qfx2unJd","executionInfo":{"status":"ok","timestamp":1730917717337,"user_tz":-330,"elapsed":795,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"4b082f3d-a803-4bf1-db1f-42ed0c7a1ebf"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3.3286968643244106"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["mean_absolute_percentage_error(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QYvuIhcMvGBA","executionInfo":{"status":"ok","timestamp":1730917737776,"user_tz":-330,"elapsed":784,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"a8b3f3a5-c960-4efa-dd35-3a3b53504bc2"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.14713035779536746"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["r2_score(y_test,y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RRfN5LFQvOcF","executionInfo":{"status":"ok","timestamp":1730917775809,"user_tz":-330,"elapsed":536,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"8e23a8cc-16fc-4550-9216-68c37ffa893e"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7031250746717691"]},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["# Polynomial Regression"],"metadata":{"id":"g8KqtXPXvZ6L"}},{"cell_type":"code","source":["from sklearn.preprocessing import PolynomialFeatures"],"metadata":{"id":"vxAUE_4cvh9E","executionInfo":{"status":"ok","timestamp":1730917871527,"user_tz":-330,"elapsed":553,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["poly = PolynomialFeatures(degree=2,interaction_only=True,include_bias=False)"],"metadata":{"id":"IPPHrPipvq-8","executionInfo":{"status":"ok","timestamp":1730917973762,"user_tz":-330,"elapsed":6,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["x_train2 = poly.fit_transform(x_train)"],"metadata":{"id":"OM7jeoOPwFa4","executionInfo":{"status":"ok","timestamp":1730918033776,"user_tz":-330,"elapsed":477,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["x_test2 = poly.fit_transform(x_test)"],"metadata":{"id":"r0Krjwx7wNTy","executionInfo":{"status":"ok","timestamp":1730918035327,"user_tz":-330,"elapsed":762,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["lr.fit(x_train2,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"gUMU6zBmwTL8","executionInfo":{"status":"ok","timestamp":1730918070110,"user_tz":-330,"elapsed":512,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"9d495aaa-2c5d-4877-977e-83a01e483cd9"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-2 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-2 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-2 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-2 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-2 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-2 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-2 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-2 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-2 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-2 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-2 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-2 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-2 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-2 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-2 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-2 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-2 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["lr.intercept_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mz4YjAbcwcNn","executionInfo":{"status":"ok","timestamp":1730918119590,"user_tz":-330,"elapsed":457,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"58b99bc7-8791-4fbe-f7a6-c91c53e62ea9"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["21.27336450063766"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["lr.coef_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FP6iIYTIwo6N","executionInfo":{"status":"ok","timestamp":1730918151981,"user_tz":-330,"elapsed":433,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"7f769743-5b98-4e6c-8f2a-9693473f419f"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-2.76070596, -5.00559628, -1.36884133, -0.81225214,  1.24596571,\n","       -0.12475017, -0.90542822,  1.35064048, -0.17337823,  1.41680398])"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["y_pred_poly = lr.predict(x_test2)"],"metadata":{"id":"IJ3z9EfKwvo7","executionInfo":{"status":"ok","timestamp":1730918179015,"user_tz":-330,"elapsed":425,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":50,"outputs":[]},{"cell_type":"markdown","source":["# **Model Accuracy**"],"metadata":{"id":"rIIE14S7w3Xp"}},{"cell_type":"code","source":["from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, r2_score"],"metadata":{"id":"2lBLIZkvxAEh","executionInfo":{"status":"ok","timestamp":1730918250122,"user_tz":-330,"elapsed":476,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["mean_absolute_error(y_test,y_pred_poly)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DGkbrR3Fw9Zt","executionInfo":{"status":"ok","timestamp":1730918271126,"user_tz":-330,"elapsed":838,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"635214c5-7400-406f-c46a-f66daa90e722"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.7887147720295977"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["mean_absolute_percentage_error(y_test,y_pred_poly)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U2_8sgnnxM0a","executionInfo":{"status":"ok","timestamp":1730918290262,"user_tz":-330,"elapsed":512,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"a7b73050-0f89-4ae9-c8ae-64d5b6f943eb"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.12074018342938687"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["r2_score(y_test,y_pred_poly)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"quL55cn0xRvS","executionInfo":{"status":"ok","timestamp":1730918307063,"user_tz":-330,"elapsed":692,"user":{"displayName":"Pawan Kumar","userId":"03540886589629649648"}},"outputId":"0565912e-a56f-4f36-f95f-3669399335dc"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7461731314563803"]},"metadata":{},"execution_count":54}]}]}